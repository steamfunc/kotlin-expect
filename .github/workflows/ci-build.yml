name: CI Build

on:
  push:
    branches:
      - main
      - develop
      - feature/*

  pull_request:
    branches:
      - main
      - develop
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17' # 사용할 JDK 버전
          distribution: 'temurin' # JDK 배포판 (temurin, zulu 등)
          cache: gradle

      # 3. Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 4. Run Gradle build
      - name: Run Gradle Build
        run: ./gradlew clean test # Gradle 빌드 실행

      # 5. 코드 커버리지 업로드 (Codecov 사용)
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          slug: ${{ github.repository }} # GitHub 저장소 이름
          files: build/jacoco/coverage.xml # JaCoCo XML 경로
          token: ${{ secrets.CODECOV_TOKEN }} # Codecov 토큰 (Codecov 프로젝트에서 생성)
          flags: unittests
          name: codecov-coverage


      # 6. HTML 보고서 저장
      - name: Upload coverage HTML report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: build/jacoco/coverage
